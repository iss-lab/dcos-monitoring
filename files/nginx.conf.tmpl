${USER_DIRECTIVE}
worker_processes  1;

error_log  ${MESOS_SANDBOX}/nginx/error.log warn;
pid        ${MESOS_SANDBOX}/nginx/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # Use dcos-net resolver address so that l4lb DNS names can be resolved.
  resolver 198.51.100.1 ipv6=off;

  fastcgi_temp_path     ${MESOS_SANDBOX}/nginx/fastcgi_temp;
  uwsgi_cache_path      ${MESOS_SANDBOX}/nginx/uwsgi_cache levels=1:2 use_temp_path=on keys_zone=uwsgi:10m;
  uwsgi_temp_path       ${MESOS_SANDBOX}/nginx/uwsgi_temp;
  scgi_cache_path       ${MESOS_SANDBOX}/nginx/scgi_cache levels=1:2 use_temp_path=on keys_zone=scgi:10m;
  scgi_temp_path        ${MESOS_SANDBOX}/nginx/scgi_temp;
  client_body_temp_path ${MESOS_SANDBOX}/nginx/client_temp;
  proxy_cache_path      ${MESOS_SANDBOX}/nginx/proxy_cache levels=1:2 use_temp_path=on keys_zone=proxy:10m;
  proxy_temp_path       ${MESOS_SANDBOX}/nginx/proxy_temp;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log ${MESOS_SANDBOX}/nginx/access.log  main;

  sendfile off;

  keepalive_timeout 65;

  server {
    listen ${PORT_PROXY};

    # Route for scheduler API endpoint.
    location /v1/ {
      proxy_pass http://localhost:${PORT_API};
    }

    # Note we have to define 'upstream' variables below because
    # otherwise, Nginx will try to resolve the DNS name during
    # bootstrap, which will fail because the service is not up yet.

    # Route for Grafana UI.
    location /grafana/ {
      set $upstream http://grafana.${DNS_FRAMEWORK_NAME}.l4lb.thisdcos.directory:3000;
      rewrite ^/grafana/(.*) /$1 break;
      proxy_pass $upstream;
      proxy_set_header Authorization "Basic ${GRAFANA_AUTH}";
    }

    location = /grafana {
      set $upstream http://grafana.${DNS_FRAMEWORK_NAME}.l4lb.thisdcos.directory:3000;
      rewrite /grafana / break;
      proxy_pass $upstream;
      proxy_set_header Authorization "Basic ${GRAFANA_AUTH}";
    }

    # Route for Alertmanager UI.
    location /alertmanager/ {
      set $upstream http://alertmanager.${DNS_FRAMEWORK_NAME}.l4lb.thisdcos.directory:9093;
      rewrite ^/alertmanager/(.*) /$1 break;
      proxy_pass $upstream;
    }

    location = /alertmanager {
      set $upstream http://alertmanager.${DNS_FRAMEWORK_NAME}.l4lb.thisdcos.directory:9093;
      rewrite /alertmanager / break;
      proxy_pass $upstream;
    }

    # Route for Prometheus UI.
    location /prometheus/ {
      set $upstream http://prometheus.${DNS_FRAMEWORK_NAME}.l4lb.thisdcos.directory:9090;
      rewrite ^/prometheus/(.*) /$1 break;
      proxy_pass $upstream;
    }

    location = /prometheus {
      set $upstream http://prometheus.${DNS_FRAMEWORK_NAME}.l4lb.thisdcos.directory:9090;
      rewrite /prometheus /graph break;
      proxy_pass $upstream;
    }

    location = /prometheus/ {
      set $upstream http://prometheus.${DNS_FRAMEWORK_NAME}.l4lb.thisdcos.directory:9090;
      rewrite /prometheus/ /graph break;
      proxy_pass $upstream;
    }

  }
}
